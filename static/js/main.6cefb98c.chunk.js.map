{"version":3,"sources":["reportWebVitals.js","components/Header/Header.jsx","components/TodoForm/TodoForm.style.js","components/TodoForm/TodoForm.jsx","components/Todo/Todo.style.js","components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","components/Home/Home.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","AppBar","position","Toolbar","Typography","variant","component","sx","flexGrow","Button","color","todoFormStyles","makeStyles","theme","box","display","justifyContent","textField","width","marginTop","marginBottom","breakpoints","down","TodoForm","addTodo","styles","inputValue","defaultValue","useState","input","setInput","bind","value","onChange","e","target","clear","useInputValue","onSubmit","preventDefault","trim","Box","className","TextField","type","label","todoStyles","mainBox","minHeight","maxHeight","borderBottom","paddingBottom","button","alignItems","margin","flex","textFieldContainer","padding","textDecoration","overflowWrap","overflow","fontSize","text","Todo","todo","toggleTodo","removeTodo","changeTodo","setChangeTodo","title","updateInputValue","setUpdateInputValue","complete","setComplete","onClick","Container","id","TodoList","todos","map","reverse","Home","setTodos","useEffect","axios","get","data","newTodo","Math","random","toString","substr","length","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cefb98c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { AppBar, Toolbar, Typography } from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <AppBar position=\"fixed\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" component=\"h1\" sx={{ flexGrow: 1 }}>\r\n          TO-DO LIST\r\n        </Typography>\r\n        <Button variant=\"text\" color=\"inherit\">\r\n          Log in\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const todoFormStyles = makeStyles((theme) => ({\r\n  box: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  textField: {\r\n    width: \"75%\",\r\n    marginTop: \"6rem\",\r\n    marginBottom: \"1rem\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"85%\",\r\n      marginTop: \"5rem\",\r\n      marginBottom: \"1rem\",\r\n    },\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { todoFormStyles } from \"./TodoForm.style\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\n\r\n\r\nexport const TodoForm = ({ addTodo }) => {\r\n  const styles = todoFormStyles();\r\n  const inputValue = useInputValue(\"\");\r\n  function useInputValue(defaultValue = \"\") {\r\n    const [input, setInput] = useState(defaultValue);\r\n    return {\r\n      bind: {\r\n        value: input,\r\n        onChange: (e) => setInput(e.target.value),\r\n      },\r\n      clear: () => setInput(\"\"),\r\n    };\r\n  }\r\n\r\n  const handlerSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.bind.value.trim()) {\r\n      addTodo(inputValue.bind.value);\r\n      inputValue.clear();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handlerSubmit}>\r\n      <Box className={styles.box}>\r\n        <TextField\r\n          className={styles.textField}\r\n          type=\"search\"\r\n          label=\"Write To-Do and push Enter\"\r\n          {...inputValue.bind}\r\n        />\r\n      </Box>\r\n    </form>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const todoStyles = makeStyles((theme) => ({\r\n  mainBox: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  box: {\r\n    width: \"75%\",\r\n    minHeight: \"4.5rem\",\r\n    maxHeight: \"6rem\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"1rem\",\r\n    borderBottom: \"1px solid #1f71db\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"85%\",\r\n      minHeight: \"4.5rem\",\r\n      paddingBottom: \"0.3rem\",\r\n      marginBottom: \"0.5rem\",\r\n    },\r\n  },\r\n  button: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"start\",\r\n    margin: \"0.3rem\",\r\n    flex: 1,\r\n  },\r\n  textFieldContainer: {\r\n    display: \"flex\",\r\n    flex: 20,\r\n    padding: \"0.5rem\",\r\n    margin: \"0 0.3rem\",\r\n  },\r\n  textField: {\r\n    width: \"100%\",\r\n  },\r\n  textDecoration: {\r\n    textDecoration: \"line-through\",\r\n    color: \"grey\",\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n    overflowWrap: \"anywhere\",\r\n    overflow: \"auto\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  text: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n    overflowWrap: \"anywhere\",\r\n    overflow: \"auto\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n}));\r\n","import { useState } from 'react'\r\nimport { Container, TextField, Typography } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport { todoStyles } from './Todo.style'\r\nimport PublishedWithChangesIcon from '@mui/icons-material/PublishedWithChanges'\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle'\r\nimport TaskIcon from '@mui/icons-material/Task'\r\nimport SettingsIcon from '@mui/icons-material/Settings'\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever'\r\n\r\nexport const Todo = ({ todo, toggleTodo, removeTodo }) => {\r\n  const [changeTodo, setChangeTodo] = useState(false)\r\n  const [updateInputValue, setUpdateInputValue] = useState(todo.title)\r\n  const [complete, setComplete] = useState(false)\r\n  const styles = todoStyles()\r\n  return (\r\n    <Box key={todo.id} className={styles.mainBox}>\r\n      <Box className={styles.box}>\r\n        {complete ? (\r\n          <Box // return to-do to the unfulfilled state\r\n            className={styles.button}\r\n            onClick={() => {\r\n              setComplete(false);\r\n            }}\r\n          >\r\n            <PublishedWithChangesIcon sx={{ color: '#515251' }} />\r\n          </Box>\r\n        ) : (\r\n          <Box //completed to-do\r\n            className={styles.button}\r\n            onClick={() => setComplete(true)}\r\n          >\r\n            <CheckCircleIcon sx={{ color: '#178f07' }} />\r\n          </Box>\r\n        )}\r\n\r\n        <Container\r\n          className={styles.textFieldContainer}\r\n          onClick={() => toggleTodo(todo.id)}\r\n        >\r\n          {changeTodo ? (\r\n            <TextField\r\n              className={styles.textField}\r\n              value={updateInputValue}\r\n              onChange={(e) => setUpdateInputValue(e.target.value)}\r\n            />\r\n          ) : (\r\n            <Typography className={complete ? styles.textDecoration : styles.text}>{updateInputValue}</Typography>\r\n          )}\r\n        </Container>\r\n\r\n        {changeTodo ? (\r\n          <Box //save new input value\r\n            className={styles.button}\r\n            onClick={() => {\r\n              setChangeTodo(false)\r\n              \r\n            }}\r\n          >\r\n            <TaskIcon sx={{ color: '#1f71db' }} />\r\n          </Box>\r\n        ) : (\r\n          <Box //change input value\r\n            className={styles.button}\r\n            onClick={() => {\r\n              setChangeTodo(true);\r\n            }}\r\n          >\r\n            <SettingsIcon sx={{ color: '#515251' }} />\r\n          </Box>\r\n        )}\r\n        <Box //delete to-do\r\n          className={styles.button}\r\n          onClick={() => removeTodo(todo.id)}\r\n        >\r\n          <DeleteForeverIcon sx={{ color: '#cc1606' }} />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { Todo } from \"../Todo\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nexport const TodoList = ({ todos, toggleTodo, removeTodo }) => {\r\n  return (\r\n    <Box>\r\n      {todos\r\n        .map((todo) => (\r\n          <Todo\r\n            todo={todo}\r\n            key={todo.id}\r\n            toggleTodo={toggleTodo}\r\n            removeTodo={removeTodo}\r\n          />\r\n        ))\r\n        .reverse()}\r\n    </Box>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Header } from \"../Header\";\r\nimport { TodoForm } from \"../TodoForm\";\r\nimport { TodoList } from \"../TodoList\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\nexport const Home = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/todos?_limit=5\")\r\n      .then((todos) => {\r\n        setTodos(todos.data);\r\n      });\r\n  }, []);\r\n\r\n  const addTodo = (input) => {\r\n    if (input) {\r\n      const newTodo = {\r\n        id: Math.random().toString(36).substr(2, 9),\r\n        title: input,\r\n        complete: false,\r\n      };\r\n      setTodos([...todos, newTodo]);\r\n    }\r\n  };\r\n\r\n  const toggleTodo = (id) => {\r\n    setTodos([\r\n      ...todos.map((todo) =>\r\n        todo.id === id ? { ...todo, complete: !todo.complete } : { ...todo }\r\n      ),\r\n    ]);\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    setTodos([...todos.filter((todo) => todo.id !== id)]);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Header />\r\n      <TodoForm addTodo={addTodo} />\r\n      {todos.length ? (\r\n        <TodoList\r\n          todos={todos}\r\n          removeTodo={removeTodo}\r\n          toggleTodo={toggleTodo}\r\n        />\r\n      ) : (\r\n        <Typography\r\n          variant=\"h4\"\r\n          component=\"h3\"\r\n          sx={{\r\n            marginTop: \"3rem\",\r\n            color: \"#1f71db\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          NO TO-DOS!\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Home } from './components/Home';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Home />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}